{"ast":null,"code":"var _jsxFileName = \"/Users/christy/Documents/cxxxxxn.github.io/src/views/NoteDetail/index.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport './index.css';\nimport Mnavbar from './Mnavbar';\nimport Markdown from './Markdown';\nexport default class NoteDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.winScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n\n      if (scrollTop > 80) {\n        this.setState(prevState => {\n          if (!prevState.navbarStick) {\n            return {\n              navbarStick: true\n            };\n          }\n        });\n      } else if (scrollTop < 100) {\n        this.setState(prevState => {\n          if (prevState.navbarStick) {\n            return {\n              navbarStick: false\n            };\n          }\n        });\n      }\n    };\n\n    this.content = React.createRef();\n    this.state = {\n      content: \"\",\n      navbarStick: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.note.md).then(res => res.text()).then(text => this.setState({\n      content: text\n    }));\n    document.addEventListener('scroll', this.winScroll, false);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.note.name !== this.props.note.name) {\n      fetch(this.props.note.md).then(res => res.text()).then(text => this.setState({\n        content: text\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.winScroll, false);\n  }\n\n  // shouldComponentUpdate(nextProps, nextState){\n  //     if(nextProps.note.name === this.props.note.name && nextState.md === this.state.md){\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  render() {\n    const {\n      content\n    } = this.state;\n\n    if (content) {\n      const {\n        title,\n        time\n      } = this.props.note;\n      const navbarClassName = \"article-navbar big-device \" + (this.state.navbarStick ? \"article-navbar-stick\" : null);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"noteDetail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: navbarClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"article-navbar-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, \"\\u6587\\u7AE0\\u76EE\\u5F55\"), /*#__PURE__*/React.createElement(Mnavbar, {\n        source: content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        lg: 9,\n        className: \"article\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"article-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"article-time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, time), /*#__PURE__*/React.createElement(Markdown, {\n        source: content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/christy/Documents/cxxxxxn.github.io/src/views/NoteDetail/index.js"],"names":["React","Component","Row","Col","Mnavbar","Markdown","NoteDetail","constructor","props","winScroll","scrollTop","window","pageYOffset","document","documentElement","body","setState","prevState","navbarStick","content","createRef","state","componentDidMount","fetch","note","md","then","res","text","addEventListener","componentDidUpdate","prevProps","name","componentWillUnmount","removeEventListener","render","title","time","navbarClassName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Row, Col } from 'react-flexbox-grid';\nimport './index.css';\n\nimport Mnavbar from './Mnavbar';\nimport Markdown from './Markdown';\n\n\nexport default class NoteDetail extends Component {\n\n    constructor(props){\n        super(props);\n        this.content = React.createRef();\n        this.state = {\n            content:\"\",\n            navbarStick: false\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.note.md)\n          .then(res => res.text())\n          .then(text => this.setState({content: text}));\n\n        document.addEventListener('scroll', this.winScroll, false);\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.note.name !== this.props.note.name){\n            fetch(this.props.note.md)\n                .then(res => res.text())\n                .then(text => this.setState({content: text}));\n        }\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('scroll', this.winScroll, false);\n    }\n\n    winScroll = ()=>{\n        const scrollTop =\n            window.pageYOffset ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop ||\n            0;\n\n        if(scrollTop > 80){\n            this.setState((prevState) => {\n                if(!prevState.navbarStick){\n                    return {\n                        navbarStick: true\n                    }\n                }\n            });\n        }else if(scrollTop < 100){\n            this.setState((prevState) => {\n                if(prevState.navbarStick){\n                    return {\n                        navbarStick: false\n                    }\n                }\n            });\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState){\n    //     if(nextProps.note.name === this.props.note.name && nextState.md === this.state.md){\n    //         return false;\n    //     }\n    //     return true;\n    // }\n    \n    render(){\n        const {content} = this.state;\n        if(content){\n        const {title, time} = this.props.note;\n\n        const navbarClassName =\"article-navbar big-device \" + (this.state.navbarStick?\"article-navbar-stick\":null)\n        return (\n            <div className=\"noteDetail\">\n                <Row>\n                    <Col lg={3}>\n                        <div className={navbarClassName}>\n                            <h3 className=\"article-navbar-title\">文章目录</h3>\n                            <Mnavbar source={content}></Mnavbar>\n                        </div>\n                    </Col>\n                    <Col xs={12} lg={9}\n                        className=\"article\">\n                        <h2 className=\"article-title\">{title}</h2>\n                        <p className=\"article-time\">{time}</p>\n                        <Markdown source={content}></Markdown>\n                    </Col>\n                </Row>\n            </div>\n            );\n        }else{\n            return <div></div>\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}