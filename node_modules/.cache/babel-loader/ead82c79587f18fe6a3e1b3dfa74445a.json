{"ast":null,"code":"var _jsxFileName = \"/Users/christy/Documents/cxxxxxn.github.io/src/views/NoteDetail/Markdown.js\";\nimport React, { Component } from 'react';\nimport marked from 'marked';\nimport hljs from 'highlight.js';\nimport './index.css';\nimport 'highlight.js/styles/github-gist.css';\nexport default class Markdown extends Component {\n  constructor(props) {\n    super(props);\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      tables: true,\n      breaks: true,\n      pedantic: false,\n      smartypants: false,\n      highlight: function (str, lang) {\n        console.log(str, lang); // 此处判断是否有添加代码语言\n\n        if (lang && hljs.getLanguage(lang)) {\n          try {\n            // 得到经过highlight.js之后的html代码\n            const preCode = hljs.highlight(lang, str, true).value; // 以换行进行分割\n\n            const lines = preCode.split(/\\n/).slice(0, -1); // 添加自定义行号\n\n            let html = lines.map((item, index) => {\n              return '<li><span class=\"line-num\" data-line=\"' + (index + 1) + '\"></span>' + item + '</li>';\n            }).join('');\n            html = '<ol>' + html + '</ol>';\n            return html;\n          } catch (__) {}\n        } // 未添加代码语言，此处与上面同理\n\n\n        const preCode = hljs.highlightAuto(str).value;\n        const lines = preCode.split(/\\n/).slice(0, -1);\n        let html = lines.map((item, index) => {\n          return '<li><span class=\"line-num\" data-line=\"' + (index + 1) + '\"></span>' + item + '</li>';\n        }).join('');\n        html = '<ol>' + html + '</ol>';\n        return html;\n      }\n    });\n  } // function(code) {\n  //     return hljs.highlightAuto(code).value;\n  // },\n\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.source !== this.props.source) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      source\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"note-content\",\n      className: \"article-detail\",\n      dangerouslySetInnerHTML: {\n        __html: source ? marked(source) : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/christy/Documents/cxxxxxn.github.io/src/views/NoteDetail/Markdown.js"],"names":["React","Component","marked","hljs","Markdown","constructor","props","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","smartypants","highlight","str","lang","console","log","getLanguage","preCode","value","lines","split","slice","html","map","item","index","join","__","highlightAuto","shouldComponentUpdate","nextProps","source","render","__html"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport marked from 'marked';\nimport hljs from 'highlight.js';\nimport './index.css';\nimport 'highlight.js/styles/github-gist.css';\n\nexport default class Markdown extends Component {\n\n    constructor(props){\n        super(props);\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: true,\n            pedantic: false,\n            smartypants: false,\n            highlight: function (str, lang) {\n                console.log(str,lang)\n                // 此处判断是否有添加代码语言\n              if (lang && hljs.getLanguage(lang)) {\n                try {\n                    // 得到经过highlight.js之后的html代码\n                  const preCode = hljs.highlight(lang, str, true).value\n                  // 以换行进行分割\n                  const lines = preCode.split(/\\n/).slice(0, -1)\n                  // 添加自定义行号\n                  let html = lines.map((item, index) => {\n                    return '<li><span class=\"line-num\" data-line=\"' + (index + 1) + '\"></span>' + item + '</li>'\n                  }).join('')\n                  html = '<ol>' + html + '</ol>'\n                  return html;\n                } catch (__) {}\n              }\n              // 未添加代码语言，此处与上面同理\n              const preCode = hljs.highlightAuto(str).value;\n              const lines = preCode.split(/\\n/).slice(0, -1)\n              let html = lines.map((item, index) => {\n                return '<li><span class=\"line-num\" data-line=\"' + (index + 1) + '\"></span>' + item + '</li>'\n              }).join('')\n              html = '<ol>' + html + '</ol>'\n              return html;\n            }\n        });\n    }\n\n    // function(code) {\n    //     return hljs.highlightAuto(code).value;\n    // },\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.source !== this.props.source) {\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    render(){\n        const {source} = this.props;\n        return <div\n            id=\"note-content\"\n            className=\"article-detail\"\n            dangerouslySetInnerHTML={{__html: source?marked(source):null}}\n        />;\n    }\n}"]},"metadata":{},"sourceType":"module"}